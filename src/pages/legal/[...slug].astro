---
import { getEntryBySlug} from 'astro:content';
import RightSidebar from '../../components/RightSidebar/RightSidebar.astro';
import type { MarkdownHeading } from 'astro';
import PageLayout from '../../layouts/PageLayout.astro';
import { GITHUB_EDIT_URL } from '../../consts';

// 1. Get the slug from the incoming server request
const { slug } = Astro.params;
if (slug === undefined) {
  throw new Error("Slug is required");
}
// 2. Query for the entry directly using the request slug
const entry = await getEntryBySlug("legal", slug);
// 3. Redirect if the entry does not exist
if (entry === undefined) {
  return Astro.redirect("/404");
}
// 4. Render the entry to HTML in the template
const { Content, headings } = await entry.render();

const currentPage = Astro.url.pathname;
const currentFile = `src/content/${currentPage.replace(/\/$/, '')}.md`;
const githubEditUrl = `${GITHUB_EDIT_URL}/${currentFile}`;
---

<PageLayout headings={headings as MarkdownHeading[]} {...entry.data} githubEditUrl={githubEditUrl} hasMiddle={true}>
	<div class="column content">
		<h1>{entry.data.title}</h1>
		<Content />
	</div>

	<div class="column is-one-quarter" slot="in_body_end">
		<RightSidebar headings={headings} githubEditUrl={githubEditUrl} tags={entry.data.tags}>
		</RightSidebar>
	</div>
</PageLayout>
